/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package exemplo_systemtray;

import java.awt.SystemTray;
import java.awt.TrayIcon;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Aluno
 */
public class JFray extends javax.swing.JFrame {

    SystemTray tray;
    TrayIcon ticon;
    
    
    /**
     * Creates new form JFray
     */
    public JFray() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menu = new java.awt.PopupMenu();
        menuRetorna = new java.awt.MenuItem();
        menuSair = new java.awt.MenuItem();
        menuMsg = new java.awt.MenuItem();
        jButton1 = new javax.swing.JButton();

        menu.setLabel("popupMenu1");
        menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuActionPerformed(evt);
            }
        });

        menuRetorna.setLabel("Retorna");
        menuRetorna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuRetornaActionPerformed(evt);
            }
        });
        menu.add(menuRetorna);

        menuSair.setLabel("Sair");
        menuSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSairActionPerformed(evt);
            }
        });
        menu.add(menuSair);

        menuMsg.setLabel("Mensagem");
        menuMsg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuMsgActionPerformed(evt);
            }
        });
        menu.add(menuMsg);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jButton1.setText("TRAY");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(157, 157, 157)
                .addComponent(jButton1)
                .addContainerGap(164, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(119, 119, 119)
                .addComponent(jButton1)
                .addContainerGap(150, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //ocultar a janela
        setVisible(!isVisible());
        carregaTray();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menuActionPerformed

    private void menuRetornaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuRetornaActionPerformed
        setVisible(true);
        tray.remove(ticon);
        ticon.setPopupMenu(null);
        ticon = null;
    }//GEN-LAST:event_menuRetornaActionPerformed

    private void menuSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSairActionPerformed
        System.exit(0);
    }//GEN-LAST:event_menuSairActionPerformed

    private void menuMsgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuMsgActionPerformed
        JOptionPane.showMessageDialog(this, "Falou Man");
    }//GEN-LAST:event_menuMsgActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        //Mesmo código do botão tray
        setVisible(!isVisible());
        carregaTray();
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFray.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFray.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFray.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFray.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFray().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private java.awt.PopupMenu menu;
    private java.awt.MenuItem menuMsg;
    private java.awt.MenuItem menuRetorna;
    private java.awt.MenuItem menuSair;
    // End of variables declaration//GEN-END:variables

    private void carregaTray() {
        //iniciar as variaveis
        if (tray==null){
            tray= SystemTray.getSystemTray();
        }
        //iniciar a variavel
        tray = SystemTray.getSystemTray();
        //Adicionar um icone para o tray
        URL image = getClass().getResource("/imagens/icon.png");
        if(ticon==null){
            ticon = new TrayIcon(new ImageIcon(image, null).getImage(), "Vini Tray");
            //Para redimensionar a imagem do icone, se necessario
            ticon.setImageAutoSize(true);
            //Vamos vincular o menu ao tray
            ticon.setPopupMenu(menu);
            //Vamos crar um ouvinte de eventos do mouse
            MouseListener mouse = new MouseListener() {
                @Override
                public void mouseClicked(MouseEvent e) {
                    //Se o usuário clicar 2x com o botao esquerdo
                    //Voltar para o aplicativo
                    if(e.getButton()==1){
                        if(e.getClickCount()==2){
                            //Código do menu
                            setVisible(true);
                            tray.remove(ticon);
                            ticon.setPopupMenu(null);
                            ticon = null;
                        }
                    }
                    if(e.getButton()==2){
                        //Exibir o balão de notificação
                        ticon.displayMessage("Este é um botão de notificação",
                                "Testando",TrayIcon.MessageType.ERROR);
                    }
                }
                @Override
                public void mousePressed(MouseEvent e) {
                }
                @Override
                public void mouseReleased(MouseEvent e) {
                }
                @Override
                public void mouseEntered(MouseEvent e) {
                }
                @Override
                public void mouseExited(MouseEvent e) {
                }
            };
            //Adicionar a imagem na bandeira do sistema
            ticon.addMouseListener(mouse);
            try{
                tray.add(ticon);
            }
            catch(Exception ex){
                setVisible(!isVisible());
                JOptionPane.showMessageDialog(null, "Erro ao identificar");
            }
        }
    }
}
