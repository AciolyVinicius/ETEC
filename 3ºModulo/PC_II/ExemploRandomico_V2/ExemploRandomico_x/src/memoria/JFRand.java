/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package memoria;

import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.util.Arrays;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Prof. Charles Barros
 */
public class JFRand extends javax.swing.JFrame {

    JLabel[] jogo;
    //Um seletor de arquivos
    JFileChooser escolha;
    //Usar para chave em cada imagem
    int cont;
    //Controles para cada par de ícones
    Icon ic1, ic2;
    //Um vetor de arquivos
        File[] imagens;
        //Um vetor de icones que serão embaralhados
        
        ImageIcon[] ic;

    /**
     * Creates new form NewJFrame
     */
    public JFRand() {
        initComponents();
        cont=1;
        jogo = new JLabel[]{lblImg1, lblImg2, lblImg3, lblImg4, lblImg5, lblImg6};
        //Uso da herança
        ic = new IconeJogo[jogo.length];
        
        escolha = new JFileChooser();
        //Permitir que se escolha vários arquivos
        escolha.setDialogTitle("Escolha pelo menos " + jogo.length + " imagens para o Jogo da Memória");
        escolha.setMultiSelectionEnabled(true);
        //Permitir que se escolha apenas imagens
        escolha.setFileFilter(new FileNameExtensionFilter("Imagens", "bmp", "png", "jpg"));
        escolha.setAcceptAllFileFilterUsed(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSortear = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lblImg1 = new javax.swing.JLabel();
        lblImg2 = new javax.swing.JLabel();
        lblImg3 = new javax.swing.JLabel();
        lblImg4 = new javax.swing.JLabel();
        lblImg5 = new javax.swing.JLabel();
        lblImg6 = new javax.swing.JLabel();
        btnJogar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnSortear.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSortear.setText("Sortear");
        btnSortear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortearActionPerformed(evt);
            }
        });

        jPanel1.setLayout(new java.awt.GridLayout(2, 3));

        lblImg1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblImg1MouseClicked(evt);
            }
        });
        jPanel1.add(lblImg1);

        lblImg2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblImg2MouseClicked(evt);
            }
        });
        jPanel1.add(lblImg2);

        lblImg3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblImg3MouseClicked(evt);
            }
        });
        jPanel1.add(lblImg3);

        lblImg4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblImg4MouseClicked(evt);
            }
        });
        jPanel1.add(lblImg4);

        lblImg5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblImg5MouseClicked(evt);
            }
        });
        jPanel1.add(lblImg5);

        lblImg6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblImg6MouseClicked(evt);
            }
        });
        jPanel1.add(lblImg6);

        btnJogar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnJogar.setText("Jogar");
        btnJogar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJogarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 567, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(155, 155, 155)
                .addComponent(btnSortear)
                .addGap(112, 112, 112)
                .addComponent(btnJogar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSortear)
                    .addComponent(btnJogar))
                .addGap(32, 32, 32))
        );

        setBounds(0, 0, 583, 460);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSortearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortearActionPerformed
        try {
            carregaImagens();
        } catch (IOException ex) {}
        
    }//GEN-LAST:event_btnSortearActionPerformed

    private void btnJogarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJogarActionPerformed
      
           for(int i = 0; i < jogo.length; i++) {
               try {
                   jogo[i].setIcon(new IconeJogo(ImageIO.read(new File("src/memoria/oque.jpg")).
                           getScaledInstance(lblImg1.getWidth(), lblImg1.getHeight(),
                                   Image.SCALE_FAST)));
               } catch (IOException ex) {
                   System.out.println(ex.getMessage());
               }
        }
      
    }//GEN-LAST:event_btnJogarActionPerformed

    private void lblImg1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblImg1MouseClicked
        //método que envia o ícone da label que foi clicada
        verifica(((JLabel)evt.getComponent()).getIcon());
    }//GEN-LAST:event_lblImg1MouseClicked

    private void lblImg2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblImg2MouseClicked
       verifica(((JLabel)evt.getComponent()).getIcon());
    }//GEN-LAST:event_lblImg2MouseClicked

    private void lblImg3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblImg3MouseClicked
       verifica(((JLabel)evt.getComponent()).getIcon());
    }//GEN-LAST:event_lblImg3MouseClicked

    private void lblImg4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblImg4MouseClicked
        verifica(((JLabel)evt.getComponent()).getIcon());
    }//GEN-LAST:event_lblImg4MouseClicked

    private void lblImg5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblImg5MouseClicked
        verifica(((JLabel)evt.getComponent()).getIcon());
    }//GEN-LAST:event_lblImg5MouseClicked

    private void lblImg6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblImg6MouseClicked
       verifica(((JLabel)evt.getComponent()).getIcon());
    }//GEN-LAST:event_lblImg6MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFRand.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFRand.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFRand.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFRand.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFRand().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnJogar;
    private javax.swing.JButton btnSortear;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblImg1;
    private javax.swing.JLabel lblImg2;
    private javax.swing.JLabel lblImg3;
    private javax.swing.JLabel lblImg4;
    private javax.swing.JLabel lblImg5;
    private javax.swing.JLabel lblImg6;
    // End of variables declaration//GEN-END:variables

    public void carregaImagens() throws IOException { 
        //Limpar o vetor de ícones
        Arrays.fill(ic, null);
        //Primeiro armazena todos os caminhos das imagens selecionadas
        if (escolha.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            imagens = escolha.getSelectedFiles();
        }
     //Depois faz a distribuição das imagens nas labels
        //A alocação será aleatória, cada imagem estará em 2 lugares distintos
        int sort1, sort2;
        for (int i = 0; i < ic.length/2; i++) {//Roda só a metade pois carrega de 2 em 2 imagens
            //Faz um sorteio de posição para uma imagem
            do {
                sort1 = (int) (Math.random() * (ic.length));
            } while (ic[sort1] != null);
            ic[sort1] = new IconeJogo(ImageIO.read(imagens[sort1]).
                    getScaledInstance(lblImg1.getWidth(), lblImg1.getHeight(),
                            Image.SCALE_FAST));
            //Cria uma chave para o ícone
            //Uso do TypeCast, uma forma de controlar um objeto
            //informando a classe do mesmo.
            ((IconeJogo)ic[sort1]).setChave(cont);                            
          //A mesma imagem para uma posição diferente
         do {
                sort2 = (int) (Math.random() * (ic.length));
            } while (ic[sort2] != null);
            ic[sort2] = new IconeJogo(ImageIO.read(imagens[sort1]).
                    getScaledInstance(lblImg1.getWidth(), lblImg1.getHeight(),
                            Image.SCALE_FAST));
            //A mesma chave
            ((IconeJogo)ic[sort2]).setChave(cont);
            cont++;
        }
        //Coloca cada imagem na devida label
        for (int i = 0; i < jogo.length; i++) {
            jogo[i].setIcon(ic[i]);
        }
        
    }    //Atenção: Para validar se o usuário vai acertar cada imagem é necessário criar
    //algum tipo de combinação com as imagens iguais e as labels. Use sua criatividade para resolver
    //isso.
    //Não carregue fotos muito grandes pois pode travar a aplicação

    private void verifica(Icon icon) {
        //verifica se os ícones já estão associados para a comparação
        if (ic1==null){
            ic1=icon;
        }
        else{
            ic2=icon;
        }
        //compara as chaves
        if(ic1!=null && ic2!=null){
            if(((IconeJogo)ic1).getChave()==((IconeJogo)ic2).getChave()){
                System.out.println("Acertou!");
            }
            else{
                System.out.println("Errou!");
                
            }
            //desvincular os ícones de verificação
                ic1=null;
                ic2=null;
                //Colocar a Interrrogação de volta
                //Não permitir que se clique 2x na mesma label
                //Dica: Use o atributo Name da label
                //getName e setName
        }
    }

    

}
