/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package exemplocontroleteclas;

import com.sun.glass.events.KeyEvent;
import java.awt.event.ActionEvent;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JPanel;
import javax.swing.KeyStroke;

/**
 *
 * @author Aluno
 */
public class jfTeclas extends javax.swing.JFrame {

    /**
     * Creates new form jfTeclas
     */
    public jfTeclas() {
        initComponents();
        setLocationRelativeTo(null);
        teclas((JPanel)getContentPane()); // INFORMAR QUAL PAINEL RECEBERÁ AS AÇÕES DO TECLADO
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCima = new javax.swing.JButton();
        btnBaixo = new javax.swing.JButton();
        btnEsquerda = new javax.swing.JButton();
        btnDireita = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnCima.setText("CIMA");

        btnBaixo.setText("BAIXO");

        btnEsquerda.setText("ESQUERDA");

        btnDireita.setText("DIREITA");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnEsquerda)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDireita))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(168, 168, 168)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBaixo)
                            .addComponent(btnCima))
                        .addGap(0, 135, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnBaixo, btnCima, btnDireita, btnEsquerda});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnCima)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 96, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEsquerda)
                    .addComponent(btnDireita))
                .addGap(102, 102, 102)
                .addComponent(btnBaixo)
                .addGap(22, 22, 22))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnBaixo, btnCima, btnDireita, btnEsquerda});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jfTeclas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jfTeclas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jfTeclas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jfTeclas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jfTeclas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBaixo;
    private javax.swing.JButton btnCima;
    private javax.swing.JButton btnDireita;
    private javax.swing.JButton btnEsquerda;
    // End of variables declaration//GEN-END:variables

    private void teclas(JPanel jp) {
        // CADA AÇÃO RECEBERÁ UM NOME PARA FACILITAR A IDENTIFICAÇÃO
        ActionMap ac = jp.getActionMap();
        ac.put("direita", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // AQUI VAI O MOVIMENTAÇÃO À DIREITA
                int x = getX();
                setLocation(++x,getY()); // ALTERA SÓ A HORIZONTAL
            }
        });
        ac.put("esquerda", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // AQUI VAI O MOVIMENTAÇÃO À ESQUERDA
                int x = getX();
                setLocation(--x,getY()); // ALTERA SÓ A HORIZONTAL
            }
        });
        ac.put("cima", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // AQUI VAI O MOVIMENTAÇÃO PARA CIMA
                int y = getY();
                setLocation(getX(),--y); // ALTERA SÓ A VERTICAL
            }
        });
        ac.put("baixo", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // AQUI VAI O MOVIMENTAÇÃO PARA BAIXO
                int y = getY();
                setLocation(getX(),++y); // ALTERA SÓ A VERTICAL
            }
        });
        
        // QUANDO O PAINEL ESTIVER EM FOCO, VAMOS LER O INPUTMAP DESTE PAINEL
        InputMap map = jp.getInputMap(JPanel.WHEN_IN_FOCUSED_WINDOW);
        // VAMOS ASSOCIAR CADA TECLA PRESSIONADA COM O EVENTO DO ACTIONMAP CONFIGURADO ACIMA
        map.put(KeyStroke.getKeyStroke("RIGHT"), "direita");
        map.put(KeyStroke.getKeyStroke("LEFT"), "esquerda");
        map.put(KeyStroke.getKeyStroke("UP"), "cima");
        map.put(KeyStroke.getKeyStroke("DOWN"), "baixo");
        // COLINHA PARA SABER AS TECLAS
        // KeyEvent.VK_RIGHT;
    }
}
