/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package exemploarraylist;

import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Aluno
 */
public class jfArrayList extends javax.swing.JFrame {
    //ArrayList faz parte do pacote java collections
    //Permite armazenamento simples como int, double, char e também de dados complexos
    //como String ou controle para objetos diversos
    /* Parametrização de um ArrayList:
    Arraylist<TIPO> nome = new ArrayList();
    "TIPO" é a classe parametrizada
    O tamanho de um ArrayList é dinâmico, ou seja, pode adicionar
    elementos diretamente pois serão anexados ao final da lista
    */
    ArrayList<Cadastro> listagem;
    
    /**
     * Creates new form jfArrayList
     */
    public jfArrayList() {
        initComponents();
        listagem = new ArrayList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupo_um = new javax.swing.ButtonGroup();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        rdb_sim = new javax.swing.JRadioButton();
        rdb_nao = new javax.swing.JRadioButton();
        btn_cadastrar = new javax.swing.JButton();
        btn_buscar = new javax.swing.JButton();
        btn_excluir = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txt_nome = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        lst_registros = new javax.swing.JList<>();
        cmb_cursos = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("Curso");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(0), "Bolsista?"));

        grupo_um.add(rdb_sim);
        rdb_sim.setText("Sim");

        grupo_um.add(rdb_nao);
        rdb_nao.setText("Não");
        rdb_nao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdb_naoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rdb_sim, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(rdb_nao)
                        .addGap(0, 22, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(rdb_sim)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rdb_nao)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btn_cadastrar.setText("Cadastrar");
        btn_cadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cadastrarActionPerformed(evt);
            }
        });

        btn_buscar.setText("Buscar");
        btn_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscarActionPerformed(evt);
            }
        });

        btn_excluir.setText("Excluir");
        btn_excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_excluirActionPerformed(evt);
            }
        });

        jLabel3.setText("Registros");

        jScrollPane1.setViewportView(lst_registros);

        cmb_cursos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Informática", "Enfermagem", "Administração", "Logística" }));
        cmb_cursos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_cursosActionPerformed(evt);
            }
        });

        jLabel1.setText("Nome");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_nome)
                            .addComponent(cmb_cursos, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_cadastrar)
                        .addGap(18, 18, 18)
                        .addComponent(btn_buscar)
                        .addGap(18, 18, 18)
                        .addComponent(btn_excluir))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmb_cursos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_cadastrar)
                    .addComponent(btn_buscar)
                    .addComponent(btn_excluir))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(239, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rdb_naoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdb_naoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdb_naoActionPerformed

    private void btn_cadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cadastrarActionPerformed
        //Ler os campos, gravar no vetor, adicionar ma ArrayList
        //Limpar os campos e colocar o foco no caixa txt_nome
        Cadastro c = new Cadastro(txt_nome.getText(),""+cmb_cursos.getSelectedItem(), rdb_sim.isSelected());
        listagem.add(c);
        atualizaLista();
        limpaCampos();
    }//GEN-LAST:event_btn_cadastrarActionPerformed

    private void btn_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscarActionPerformed
        String nome = JOptionPane.showInputDialog("Digite um nome para buscar");
        if(nome!=null){
            buscar(nome);
        }
    }//GEN-LAST:event_btn_buscarActionPerformed

    private void cmb_cursosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_cursosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_cursosActionPerformed

    private void btn_excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_excluirActionPerformed
        String nome = JOptionPane.showInputDialog("Digite um nome para excluir");
        if(nome!=null){
            excluir(nome);
        }
    }//GEN-LAST:event_btn_excluirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jfArrayList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jfArrayList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jfArrayList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jfArrayList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jfArrayList().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_buscar;
    private javax.swing.JButton btn_cadastrar;
    private javax.swing.JButton btn_excluir;
    private javax.swing.JComboBox<String> cmb_cursos;
    private javax.swing.ButtonGroup grupo_um;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> lst_registros;
    private javax.swing.JRadioButton rdb_nao;
    private javax.swing.JRadioButton rdb_sim;
    private javax.swing.JTextField txt_nome;
    // End of variables declaration//GEN-END:variables

    private void atualizaLista() {
        DefaultListModel lista = new DefaultListModel();
       
        //For avançado
        //for((Tipo/Classe) (Variável de acesso a cada instância) : (ArrayList usado)){} 
        for(Cadastro x:listagem){
            lista.addElement("Nome: "+x.getNome()+" \n Curso: "+x.getCurso()
            + "\n Bolsista: " + ((x.isBolsista())?"Sim":"Não"));
        }
        lst_registros.setModel(lista);
        limpaCampos();
    }

    private void limpaCampos() {
        txt_nome.setText(null);
        cmb_cursos.setSelectedIndex(-1);
        grupo_um.clearSelection();
        txt_nome.requestFocus();
    }

    private void buscar (String nome){
       DefaultListModel busca = new DefaultListModel();
       for (Cadastro z: listagem){
           if (z.getNome().toUpperCase().contains(nome.toUpperCase())){
               busca.addElement("Nome: "+z.getNome()+" \n Curso: "+z.getCurso()
            + "\n Bolsista: " + ((z.isBolsista())?"Sim":"Não"));
           }
       }
       lst_registros.setModel(busca);
    }

    private void excluir(String nome) {
       boolean kill = false;
       //for((Tipo/Classe) (Variável de acesso a cada instância) : (ArrayList usado)){} 
       for (Cadastro k: listagem){//Excluir só a primeira ocorrência
           if (k.getNome().equalsIgnoreCase(nome)){
               listagem.remove(listagem.indexOf(k));
               kill = true;
               break;
           }
       }
        if(kill){
            atualizaLista();
            JOptionPane.showMessageDialog(this, "Cadastro excluído!");
        }
        else{
            JOptionPane.showMessageDialog(this, "Usuário não encontrado!");
        }
    }
}
