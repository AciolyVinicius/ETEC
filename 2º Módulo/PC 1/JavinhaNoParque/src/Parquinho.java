
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Aluno
 */
public class Parquinho extends javax.swing.JFrame {
    String cadastrocar [];
    String cadastromont [];
    String cadastrotw [];
    String cadastrobar [];
    int car=0, mont=0, tw=0, bar=0;
    /**
     * Creates new form Parquinho
     */
    public Parquinho() {
        initComponents();
        
        cadastrocar = new String[14];
        cadastromont = new String[11];
        cadastrotw = new String[11];
        cadastrobar = new String[14];
     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        lblnome = new javax.swing.JLabel();
        txtnome = new javax.swing.JTextField();
        lblaltura = new javax.swing.JLabel();
        txtaltura = new javax.swing.JTextField();
        lblano = new javax.swing.JLabel();
        txtano = new javax.swing.JTextField();
        rdbcarrossel = new javax.swing.JRadioButton();
        rdbmontanha = new javax.swing.JRadioButton();
        rdbtwist = new javax.swing.JRadioButton();
        rdbbarco = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstcarrossel = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        lsttwist = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstmontanha = new javax.swing.JList();
        jScrollPane4 = new javax.swing.JScrollPane();
        lstbarco = new javax.swing.JList();
        btnregistro = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblnome.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblnome.setText("Nome:");

        txtnome.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        lblaltura.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblaltura.setText("Altura:");

        txtaltura.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        lblano.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblano.setText("Ano de nascimento:");

        txtano.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        buttonGroup1.add(rdbcarrossel);
        rdbcarrossel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        rdbcarrossel.setText("Carrossel");
        rdbcarrossel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbcarrosselActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdbmontanha);
        rdbmontanha.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        rdbmontanha.setText("Montanha-Russa");
        rdbmontanha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbmontanhaActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdbtwist);
        rdbtwist.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        rdbtwist.setText("Twist");
        rdbtwist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbtwistActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdbbarco);
        rdbbarco.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        rdbbarco.setText("Barco Viking");
        rdbbarco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbbarcoActionPerformed(evt);
            }
        });

        lstcarrossel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jScrollPane1.setViewportView(lstcarrossel);

        lsttwist.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jScrollPane2.setViewportView(lsttwist);

        lstmontanha.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jScrollPane3.setViewportView(lstmontanha);

        lstbarco.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jScrollPane4.setViewportView(lstbarco);

        btnregistro.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnregistro.setText("Registrar");
        btnregistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnregistroActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jLabel1.setText("Parque Javinha");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        jLabel2.setText("Pessoas Registradas");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(181, 181, 181))
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rdbcarrossel)
                            .addComponent(rdbmontanha)
                            .addComponent(rdbtwist)
                            .addComponent(rdbbarco))
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addComponent(jScrollPane3)
                            .addComponent(jScrollPane2)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(197, 197, 197)
                        .addComponent(btnregistro))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblnome)
                            .addGap(18, 18, 18)
                            .addComponent(txtnome, javax.swing.GroupLayout.PREFERRED_SIZE, 448, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(lblano)
                            .addGap(18, 18, 18)
                            .addComponent(txtano))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(lblaltura)
                            .addGap(18, 18, 18)
                            .addComponent(txtaltura, javax.swing.GroupLayout.PREFERRED_SIZE, 448, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(127, 127, 127))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblnome)
                    .addComponent(txtnome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblaltura)
                    .addComponent(txtaltura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblano)
                    .addComponent(txtano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(rdbcarrossel))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(rdbmontanha)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addComponent(rdbtwist))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(rdbbarco)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnregistro)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rdbcarrosselActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbcarrosselActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdbcarrosselActionPerformed

    private void rdbmontanhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbmontanhaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdbmontanhaActionPerformed

    private void rdbtwistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbtwistActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdbtwistActionPerformed

    private void rdbbarcoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbbarcoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdbbarcoActionPerformed

    private void btnregistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnregistroActionPerformed
        String nome=txtnome.getText(), altura=txtaltura.getText(), idade=txtano.getText();
        double alt=Double.parseDouble(altura), id=Double.parseDouble(idade);
        int qtdnome = nome.length();
        String cad = "Nome "+txtnome.getText()+"; Altura: "+txtaltura.getText()+"; Ano de Nascimento: "+txtano.getText();
        cad+="; Brinquedo: "+((rdbcarrossel.isSelected())?"Carrosel":(rdbmontanha.isSelected())?"Montanha-Russa":
                (rdbtwist.isSelected())?"Twist":(rdbbarco.isSelected())?"Barco Viking":null);
        if (alt>0.8 && alt<1.8 && id>2001 && id<=2013 && qtdnome>2)
        {
            boolean gravou = false;
            if (rdbcarrossel.isSelected()){
                if (alt<=1.5){
                    for (int i=0; i<cadastrocar.length;i++){
                        if (cadastrocar[i]==null){
                            cadastrocar[i]=cad;
                            gravou=true;
                            car+=1;
                            //fugir do laço - sai do for
                            break;
                            }
                    }
                }
                else {
                    JOptionPane.showMessageDialog(null, "Altura inválida");
                }
                if (car>13){
                    JOptionPane.showMessageDialog(this, "Acabaram as vagas");
                } else{
                    JOptionPane.showMessageDialog(this, "Dados Gravados");
                }
                
                DefaultListModel lista = new DefaultListModel();
                lstcarrossel.setModel(lista);
                for(int i=0; i<13; i++){
                    if (cadastrocar[i]!=null){
                        lista.addElement(cadastrocar[i]);
                    }
                }
            }
            else if(rdbmontanha.isSelected()){
                if (id<=2010 && alt>=1.1){
                        for (int i=0; i<cadastromont.length;i++){
                            if (cadastromont[i]==null){
                                cadastromont[i]=cad;
                                gravou=true;
                                mont+=1;
                                //fugir do laço - sai do for
                                break;                
                                }
                            }
                    }
                else {
                    JOptionPane.showMessageDialog(null, "A Altura ou o Ano de Nascimento está inválido");
                }
                if (mont>10){
                    JOptionPane.showMessageDialog(this, "Acabaram as vagas");
                } else{
                    JOptionPane.showMessageDialog(this, "Dados Gravados");
                }
                DefaultListModel lista = new DefaultListModel();
                lstmontanha.setModel(lista);
                for (int i=0; i<10; i++){
                    if (cadastromont[i]!=null){
                        lista.addElement(cadastromont[i]);
                    }
                }
            } 
            else if (rdbtwist.isSelected()){
                if (id<=2005 && alt>=1.3){
                        for (int i=0; i<cadastrotw.length;i++){
                            if (cadastrotw[i]==null){
                                cadastrotw[i]=cad;
                                gravou=true;
                                tw+=1;
                                //fugir do laço - sai do for
                                break;                
                                }
                            }
                    }
                else {
                    JOptionPane.showMessageDialog(null, "A Altura ou o Ano de Nascimento está inválido");
                }
                if (tw>10){
                    JOptionPane.showMessageDialog(this, "Acabaram as vagas");
                } else{
                    JOptionPane.showMessageDialog(this, "Dados Gravados");
                }
                DefaultListModel lista = new DefaultListModel();
                lsttwist.setModel(lista);
                for (int i=0; i<10; i++){
                    if (cadastrotw[i]!=null){
                        lista.addElement(cadastrotw[i]);
                    }
                }
            }
            else if (rdbbarco.isSelected()){
                if (id<=2005 && alt>=1.3){
                        for (int i=0; i<cadastrobar.length;i++){
                            if (cadastrobar[i]==null){
                                cadastrobar[i]=cad;
                                gravou=true;
                                bar+=1;
                                //fugir do laço - sai do for
                                break;                
                                }
                            }
                    }
                else {
                    JOptionPane.showMessageDialog(null, "A Altura ou o Ano de Nascimento está inválido");
                }
                if (bar>13){
                    JOptionPane.showMessageDialog(this, "Acabaram as vagas");
                } else{
                    JOptionPane.showMessageDialog(this, "Dados Gravados");
                }
                DefaultListModel lista = new DefaultListModel();
                lstbarco.setModel(lista);
                for (int i=0; i<13; i++){
                    if (cadastrobar[i]!=null){
                        lista.addElement(cadastrobar[i]);
                    }
                }
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "ALGUM CAMPO ESTÁ PREENCHIDO COM DADO INCOMPÁTIVEL \n "
                    + "O nome deve ter mais de dois caracteres \n"
                    + "A altura deve ser de 0.8 a 1.8 metros \n"
                    + "O ano de nascimento deve ser de 2002 até 2013");
        }
    }//GEN-LAST:event_btnregistroActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Parquinho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Parquinho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Parquinho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Parquinho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Parquinho().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnregistro;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblaltura;
    private javax.swing.JLabel lblano;
    private javax.swing.JLabel lblnome;
    private javax.swing.JList lstbarco;
    private javax.swing.JList lstcarrossel;
    private javax.swing.JList lstmontanha;
    private javax.swing.JList lsttwist;
    private javax.swing.JRadioButton rdbbarco;
    private javax.swing.JRadioButton rdbcarrossel;
    private javax.swing.JRadioButton rdbmontanha;
    private javax.swing.JRadioButton rdbtwist;
    private javax.swing.JTextField txtaltura;
    private javax.swing.JTextField txtano;
    private javax.swing.JTextField txtnome;
    // End of variables declaration//GEN-END:variables
}
